# DEPRECATED: This file is scheduled for removal in a future version.
# Please use the root-level docker-compose.yml with override files:
# - docker-compose.dev.yml for development
# - docker-compose.prod.yml for production
# Example: docker compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  web:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ..
      dockerfile: docker/prod.Dockerfile
    env_file:
      - .env                      # this is deploy/.env
    environment:
      - PYTHONPATH=/app
      - PORT=8000
      - UVICORN_WORKERS=1
      - APP_MODULE=main:app
      - UVICORN_RELOAD=
      - DATABASE_URL=postgresql+psycopg2://trainsAdmin:${POSTGRES_PASSWORD}@db:5432/trains   # ‚Üê add this
    ports:
      - "8080:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: trains
      POSTGRES_USER: trainsAdmin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-brokentrack}
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trainsAdmin -d trains || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - web

  nginx:
    build:
      context: ../nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-3000}:80"
    depends_on:
      - web
      - frontend
    restart: unless-stopped
    volumes:
      # Use production config by default for deploy
      - ../nginx/nginx.deploy.conf:/etc/nginx/conf.d/default.conf:ro
      - ../frontend/dist:/usr/share/nginx/html:ro

volumes:
  dbdata: