services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile.prod
    environment:
      - PYTHONPATH=/app
      - PORT=8000
      - UVICORN_WORKERS=1
      - APP_MODULE=main:app
      - UVICORN_RELOAD=
      - DATABASE_URL=postgresql+psycopg2://trainsAdmin:${POSTGRES_PASSWORD:-brokentrack}@db:5432/trains
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - trainstation

  frontend:
    build:
      context: ./frontend
      dockerfile: ${FRONTEND_DOCKERFILE:-Dockerfile}
    restart: unless-stopped
    networks:
      - trainstation
    environment:
      - VITE_API_BASE=/api

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - trainstation
    volumes:
      # Mount the appropriate nginx config based on environment
      - ./nginx/nginx.${MODE:-prod}.conf:/etc/nginx/conf.d/default.conf:ro

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: trains
      POSTGRES_USER: trainsAdmin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-brokentrack}
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trainsAdmin -d trains || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s
    networks:
      - trainstation

networks:
  trainstation:
    driver: bridge

volumes:
  dbdata: